# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-06-30 14:36
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgencyPriceCatalogue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.Agency')),
            ],
            options={
                'verbose_name': 'Agency Price Catalogue',
                'verbose_name_plural': 'Agencies Prices Catalogues',
            },
        ),
        migrations.CreateModel(
            name='AllotmentBoardType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_type', models.CharField(choices=[('NB', 'None Board'), ('BB', 'Breakfast Board'), ('HB', 'Half Board'), ('FB', 'Full Board'), ('AI', 'All Included')], max_length=5)),
            ],
            options={
                'verbose_name': 'Allotment Board Type',
                'verbose_name_plural': 'Alloments Boards Types',
            },
        ),
        migrations.CreateModel(
            name='AllotmentRoomAvailability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability', models.SmallIntegerField(default=10)),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
            ],
            options={
                'verbose_name': 'Allotment Availability',
                'verbose_name_plural': 'Allotments Availabilities',
            },
        ),
        migrations.CreateModel(
            name='AllotmentRoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('room_type', models.CharField(choices=[('S', 'Single'), ('D', 'Double'), ('T', 'Triple')], max_length=5)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Allotment Room Type',
                'verbose_name_plural': 'Allotments Rooms Types',
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField()),
                ('date_to', models.DateField()),
            ],
            options={
                'verbose_name': 'Cost',
                'verbose_name_plural': 'Costs',
            },
        ),
        migrations.CreateModel(
            name='CostDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('senior_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('child_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('baby_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'verbose_name': 'Cost Detail',
                'verbose_name_plural': 'Costs Details',
            },
        ),
        migrations.CreateModel(
            name='CostDetailPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('senior_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('child_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('baby_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'verbose_name': 'Cost Detail Price',
                'verbose_name_plural': 'Costs Details Prices',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='PriceCatalogue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price_percent', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('price_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'verbose_name': 'Price Catalogue',
                'verbose_name_plural': 'Prices Catalogues',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('E', 'Extra'), ('A', 'Allotment'), ('T', 'Transfer')], max_length=5)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senior_age_from', models.IntegerField(blank=True, null=True)),
                ('child_age_to', models.IntegerField(blank=True, null=True)),
                ('baby_age_to', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Service Provider',
                'verbose_name_plural': 'Services Providers',
            },
        ),
        migrations.CreateModel(
            name='ServiceProviderPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_percent', models.DecimalField(decimal_places=1, max_digits=4, null=True)),
                ('price_amount', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.PriceCatalogue')),
            ],
            options={
                'verbose_name': 'Price Catalogue',
                'verbose_name_plural': 'Prices Catalogues',
            },
        ),
        migrations.CreateModel(
            name='ServiceSupplement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('datetime_from', models.DateTimeField()),
                ('datetime_to', models.DateTimeField()),
                ('automatic', models.BooleanField(default=True)),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Service Supplement',
                'verbose_name_plural': 'Services Supplements',
            },
        ),
        migrations.CreateModel(
            name='SupplementCostDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_unit_cost', models.DecimalField(decimal_places=2, max_digits=8)),
                ('senior_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('child_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('baby_unit_cost', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'verbose_name': 'Supplement Cost Detail',
                'verbose_name_plural': 'Supplements Costs Details',
            },
        ),
        migrations.CreateModel(
            name='SupplementCostDetailPrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult_unit_price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('senior_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('child_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('baby_unit_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('catalogue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.PriceCatalogue')),
            ],
            options={
                'verbose_name': 'Supplement Cost Detail Price',
                'verbose_name_plural': 'Supplements Costs Details Prices',
            },
        ),
        migrations.CreateModel(
            name='Allotment',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.Service')),
                ('time_from', models.TimeField(default='16:00')),
                ('time_to', models.TimeField(default='12:00')),
            ],
            options={
                'verbose_name': 'Allotment',
                'verbose_name_plural': 'Allotments',
            },
            bases=('config.service',),
        ),
        migrations.CreateModel(
            name='AllotmentCostDetail',
            fields=[
                ('costdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.CostDetail')),
                ('board_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.AllotmentBoardType')),
            ],
            options={
                'verbose_name': 'Allotment Cost Detail',
                'verbose_name_plural': 'Allotments Costs Details',
            },
            bases=('config.costdetail',),
        ),
        migrations.CreateModel(
            name='AllotmentServiceProvider',
            fields=[
                ('serviceprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceProvider')),
                ('cost_type', models.CharField(choices=[('F', 'Fixed'), ('P', 'By Paxes')], max_length=5)),
            ],
            options={
                'verbose_name': 'Allotment Service Provider',
                'verbose_name_plural': 'Allotments Services Providers',
            },
            bases=('config.serviceprovider',),
        ),
        migrations.CreateModel(
            name='AllotmentSupplementCostDetail',
            fields=[
                ('supplementcostdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.SupplementCostDetail')),
                ('cost_type', models.CharField(choices=[('F', 'Fixed'), ('P', 'By Paxes'), ('D', 'By Days'), ('PD', 'By Paxes Days')], max_length=10)),
            ],
            options={
                'verbose_name': 'Allotment Supplement Cost Detail',
                'verbose_name_plural': 'Allotments Supplements Costs Details',
            },
            bases=('config.supplementcostdetail',),
        ),
        migrations.CreateModel(
            name='Extra',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.Service')),
            ],
            options={
                'verbose_name': 'Extra',
                'verbose_name_plural': 'Extras',
            },
            bases=('config.service',),
        ),
        migrations.CreateModel(
            name='ExtraCostDetail',
            fields=[
                ('costdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.CostDetail')),
            ],
            options={
                'verbose_name': 'Extra Cost Detail',
                'verbose_name_plural': 'Extras Costs Details',
            },
            bases=('config.costdetail',),
        ),
        migrations.CreateModel(
            name='ExtraServiceProvider',
            fields=[
                ('serviceprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceProvider')),
                ('cost_type', models.CharField(choices=[('P', 'By Paxes'), ('E', 'By Extras'), ('PE', 'By Paxes Extras')], max_length=5)),
            ],
            options={
                'verbose_name': 'Extra Service Provider',
                'verbose_name_plural': 'Extras Services Providers',
            },
            bases=('config.serviceprovider',),
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('service_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.Service')),
            ],
            bases=('config.service',),
        ),
        migrations.CreateModel(
            name='TransferCostDetail',
            fields=[
                ('costdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.CostDetail')),
            ],
            options={
                'verbose_name': 'Transfer Cost Detail',
                'verbose_name_plural': 'Transfers Costs Details',
            },
            bases=('config.costdetail',),
        ),
        migrations.CreateModel(
            name='TransferServiceProvider',
            fields=[
                ('serviceprovider_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.ServiceProvider')),
                ('cost_type', models.CharField(choices=[('F', 'Fixed'), ('P', 'By Pax'), ('T', 'By Transport')], max_length=5)),
            ],
            options={
                'verbose_name': 'Transfer Service Provider',
                'verbose_name_plural': 'Transfers Services Providers',
            },
            bases=('config.serviceprovider',),
        ),
        migrations.CreateModel(
            name='TransferSupplementCostDetail',
            fields=[
                ('supplementcostdetail_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='config.SupplementCostDetail')),
                ('cost_type', models.CharField(choices=[('F', 'Fixed'), ('T', 'By Transports'), ('H', 'By Hours'), ('TH', 'By Transports Hours')], max_length=10)),
            ],
            options={
                'verbose_name': 'Transfer Supplement',
                'verbose_name_plural': 'Transfers Supplements',
            },
            bases=('config.supplementcostdetail',),
        ),
        migrations.AddField(
            model_name='supplementcostdetailprice',
            name='supplement_cost_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.SupplementCostDetail'),
        ),
        migrations.AddField(
            model_name='supplementcostdetail',
            name='cost',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Cost'),
        ),
        migrations.AddField(
            model_name='supplementcostdetail',
            name='supplement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.ServiceSupplement'),
        ),
        migrations.AddField(
            model_name='servicesupplement',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Service'),
        ),
        migrations.AddField(
            model_name='serviceproviderprice',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.Provider'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Service'),
        ),
        migrations.AlterUniqueTogether(
            name='service',
            unique_together=set([('category', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='pricecatalogue',
            unique_together=set([('name',)]),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('name',)]),
        ),
        migrations.AddField(
            model_name='costdetailprice',
            name='catalogue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.PriceCatalogue'),
        ),
        migrations.AddField(
            model_name='costdetailprice',
            name='cost_detail',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.CostDetail'),
        ),
        migrations.AddField(
            model_name='costdetail',
            name='cost',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Cost'),
        ),
        migrations.AddField(
            model_name='cost',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.ServiceProvider'),
        ),
        migrations.AddField(
            model_name='allotmentroomavailability',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.AllotmentRoomType'),
        ),
        migrations.AddField(
            model_name='agencypricecatalogue',
            name='price_catalogue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.PriceCatalogue'),
        ),
        migrations.AddField(
            model_name='transfer',
            name='location_from',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_from', to='config.Location'),
        ),
        migrations.AddField(
            model_name='transfer',
            name='location_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_to', to='config.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='supplementcostdetail',
            unique_together=set([('cost', 'supplement')]),
        ),
        migrations.AlterUniqueTogether(
            name='servicesupplement',
            unique_together=set([('service', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='serviceproviderprice',
            unique_together=set([('catalogue', 'service_provider')]),
        ),
        migrations.AlterUniqueTogether(
            name='serviceprovider',
            unique_together=set([('service', 'provider')]),
        ),
        migrations.AlterUniqueTogether(
            name='costdetailprice',
            unique_together=set([('catalogue', 'cost_detail')]),
        ),
        migrations.AddField(
            model_name='allotmentroomtype',
            name='allotment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Allotment'),
        ),
        migrations.AddField(
            model_name='allotmentcostdetail',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.AllotmentRoomType'),
        ),
        migrations.AddField(
            model_name='allotmentboardtype',
            name='allotment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Allotment'),
        ),
        migrations.AddField(
            model_name='allotment',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='config.Location'),
        ),
        migrations.AlterUniqueTogether(
            name='agencypricecatalogue',
            unique_together=set([('agency',)]),
        ),
    ]
